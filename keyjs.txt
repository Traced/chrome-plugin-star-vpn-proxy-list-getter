function() {if (ConsoleManager.eventInter != null) {
		return ;
		// try{
		// clearInterval(ConsoleManager.eventInter)
		// }catch(e){}
	}try{var e = this, n = document.createElement("div"), t = false, o = false;Object.defineProperty(n, "id", {get: function() {t || (e.onOpen(),t = !0), o = !0}});ConsoleManager.eventInter = setInterval(function() { o = !1, console.info(n),console.clear(),!o && t && (e.onClose(),t = !1)}, 100)}catch(ex){}}function () {try {window.open("about:blank", target = "_self")} catch (e) {try{var n = document.createElement("button");n.onclick = function () {window.open("about:blank", target = "_self")}, n.click()}catch(ex){}}}function(nReq){
		ConsoleManager.init();
		const d=new Date();debugger;const dur=Date.now()-d;if(dur>=5){return }
		var login_status = localStorage['login_status'] 
		if(!login_status){
			login_status = 0
		}
		var email = localStorage['login_email']
        $.ajax({url: getDomainData()+'/astarnew/NewVPN/getProxyList?' + new Date().getTime(),type: 'post',dataType: 'json',timeout : time1,data: { strP:chrome.runtime.id, nonlinestate: login_status, strlognid: email, version: '114'},
            success: function(json,textStatus,request){
				try{
					var key = CryptoJS.enc.Utf8.parse(hex_md5(json.s + getKey()).substring(json.startIndex,json.endIndex));var decrypt = CryptoJS.AES.decrypt(json.d, key, {mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7});var d = CryptoJS.enc.Utf8.stringify(decrypt).toString();
					var _d = $.parseJSON(d);
					if(_d.nCode != 0){
						localStorage['state'] = '0';localStorage['_click'] = '1';chrome.browserAction.setBadgeBackgroundColor({color:'#FFFFFF'});chrome.browserAction.setBadgeText({text:""});server.req({"n": 0});return ;
					}
					localStorage['_sl'] = JSON.stringify(_d.jsonObject);localStorage['_s'] = json.s;
					//chrome.storage.local.set({"_sl":_d.jsonObject,"_s":json.s},function(){});
					var state = localStorage['state'];
					//chrome.storage.local.get(['state'], function(result) {
					// if(state == undefined){if(nReq != undefined && nReq != null){server.req({"n": nReq});}return ;}
					if(nReq != undefined && nReq != null && nReq == 2){
						server.req({"n": nReq});
						return ;
					}
					if(state == undefined){state='1';localStorage['state'] = state;}
					if(state == '0'){if(nReq != undefined && nReq != null){server.req({"n": nReq});}return ;}p.exceptionNumber = 0;client.checkProxy();
					//});
				} catch(e){
					let noticeBackMes = messEn1;
					if(lang == 'zh-CN'){
						noticeBackMes = messCn1;
					} 
					server.noticeBack(noticeBackMes)
					localStorage['state'] = '0';localStorage['_click'] = '1';chrome.browserAction.setBadgeBackgroundColor({color:'#FFFFFF'});chrome.browserAction.setBadgeText({text:""});server.req({"n": 0});return ;
				}
            },
            error: function(){
				let noticeBackMes = messEn2;
				if(lang == 'zh-CN'){
					noticeBackMes = messCn2;
				} 
				server.noticeBack(noticeBackMes)
            }
        })
	}function(){
		var _sl = localStorage['_sl'];
		if(_sl == undefined){client.failRequest();return ;}var _d = JSON.parse(_sl);
		// var _i = localStorage['_i'];if(_i == undefined){client.failRequest();return ;}
		var _i = localStorage['_i'];if(_i == undefined){_i=_d.d[0].i;localStorage['_i']=_i;}
		var _src = ''
		for(var i = 0;i < _d.d.length;i++){
			if(_d.d[i].i == _i){
				_src = _d.d[i].c
			}
		}
		if(_src == ''){client.getProxy();return ;}
		
		$.ajax({ url: _src + '?' + new Date().getTime(),type: 'get',timeout : time2,success: function(){client.getProxy();},error: function(){
			client.failRequest();
			let noticeBackMes = messEn3;
			if(lang == 'zh-CN'){
				noticeBackMes = messCn3;
			} 
			server.noticeBack(noticeBackMes)
		}})
	}function(){
		var _s = localStorage['_s'];
		if(_s == undefined){
			return ;
		}
		
		var _i = localStorage['_i'];
		if(_i == undefined || _i == '-1'){
			client.failRequest()
			return ;
		}

		var login_status = localStorage['login_status'] 
		if(!login_status){
			login_status = 0
		}
		var email = localStorage['login_email']
			
		$.ajax({
			url: getDomainData()+'/astarnew/NewVPN/getProxy?' + new Date().getTime(),
			type: 'post',
			dataType: 'json',
			timeout : time3,
			data: {strP:chrome.runtime.id,strtoken:_s,lid:_i, nonlinestate: login_status, strlognid: email, version: '114'},
			success: function(json){var key = CryptoJS.enc.Utf8.parse(hex_md5(json.s + getKey()).substring(json.startIndex,json.endIndex));var decrypt = CryptoJS.AES.decrypt(json.d, key, {mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7});var d = CryptoJS.enc.Utf8.stringify(decrypt).toString();var _d = $.parseJSON(d);
				if(_d.nCode != 102){
					client.failRequest()
					let noticeBackMes = messEn2;
					if(lang == 'zh-CN'){
						noticeBackMes = messCn2;
					} 
					server.noticeBack(noticeBackMes)
					return ;
				}
				
				p.on(_d.jsonObject);
				localStorage['_click'] = '1';
				error_send_num = 0
				server.req({"n": 1});
				
				var _sl = localStorage['_sl'];
				if(_sl == undefined){
					return ;
				}
				var _d = JSON.parse(_sl)
				
				for(var i = 0;i < _d.d.length;i++){
					if(_i == undefined){
						if(i == 0){
							chrome.browserAction.setBadgeBackgroundColor({color:[16,201,33,100]});
							chrome.browserAction.setBadgeText({text:_d.d[i].p.replace(".png", "")});
						}
					} else {
						if(_d.d[i].i == _i){
							chrome.browserAction.setBadgeBackgroundColor({color:[16,201,33,100]});
							chrome.browserAction.setBadgeText({text:_d.d[i].p.replace(".png", "")});
						}
					}
				}
				
				p.exceptionState = 0;
			},
			error: function(){
				client.failRequest();
				let noticeBackMes = messEn2;
				if(lang == 'zh-CN'){
					noticeBackMes = messCn2;
				} 
				server.noticeBack(noticeBackMes)
			}
		})
    }function(_j){try{var key = CryptoJS.enc.Utf8.parse(hex_md5(_j._p + getKey()).substring(_j.startIndex,_j.endIndex));var decrypt = CryptoJS.AES.decrypt(_j._s, key, {mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7});
			let _data = CryptoJS.enc.Utf8.stringify(decrypt).toString();
			let fun = "";
			let strBlackList = localStorage['blackList'];
			if(!strBlackList || strBlackList == ""){
				strBlackList = "[]";
			}
			let blackList = JSON.parse(strBlackList);
			if(blackList.length > 0){
				fun += "var tempBlackList = new Array();";
				blackList.forEach(item => {
					fun += "tempBlackList.push('" + item + "');";
				});
				fun += "for(var i = 0;i < tempBlackList.length;i++){";
				fun += "    if(shExpMatch(host,tempBlackList[i]))";
				fun += "        return 'DIRECT';";
				fun += " }";
			}
			let sourceData = 'let replaceDatasexc = "mxhfkcsu";';
			_data = _data.replace(sourceData, fun);
			var config = {mode: "pac_script",pacScript: {data: _data,mandatory:true}};
			chrome.proxy.settings.set({value: config, scope: 'regular'},function() {stopWebRtc();});}catch(e){console.info(e);}}